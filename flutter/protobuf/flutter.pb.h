// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flutter.proto

#ifndef PROTOBUF_flutter_2eproto__INCLUDED
#define PROTOBUF_flutter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class FlutterData;
class FlutterDataDefaultTypeInternal;
extern FlutterDataDefaultTypeInternal _FlutterData_default_instance_;
class FlutterDataPoint;
class FlutterDataPointDefaultTypeInternal;
extern FlutterDataPointDefaultTypeInternal _FlutterDataPoint_default_instance_;

namespace protobuf_flutter_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_flutter_2eproto

// ===================================================================

class FlutterDataPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FlutterDataPoint) */ {
 public:
  FlutterDataPoint();
  virtual ~FlutterDataPoint();

  FlutterDataPoint(const FlutterDataPoint& from);

  inline FlutterDataPoint& operator=(const FlutterDataPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlutterDataPoint& default_instance();

  static inline const FlutterDataPoint* internal_default_instance() {
    return reinterpret_cast<const FlutterDataPoint*>(
               &_FlutterDataPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FlutterDataPoint* other);

  // implements Message ----------------------------------------------

  inline FlutterDataPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  FlutterDataPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FlutterDataPoint& from);
  void MergeFrom(const FlutterDataPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FlutterDataPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string entity = 1;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::std::string& entity() const;
  void set_entity(const ::std::string& value);
  #if LANG_CXX11
  void set_entity(::std::string&& value);
  #endif
  void set_entity(const char* value);
  void set_entity(const char* value, size_t size);
  ::std::string* mutable_entity();
  ::std::string* release_entity();
  void set_allocated_entity(::std::string* entity);

  // string metric = 2;
  void clear_metric();
  static const int kMetricFieldNumber = 2;
  const ::std::string& metric() const;
  void set_metric(const ::std::string& value);
  #if LANG_CXX11
  void set_metric(::std::string&& value);
  #endif
  void set_metric(const char* value);
  void set_metric(const char* value, size_t size);
  ::std::string* mutable_metric();
  ::std::string* release_metric();
  void set_allocated_metric(::std::string* metric);

  // double value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:FlutterDataPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entity_;
  ::google::protobuf::internal::ArenaStringPtr metric_;
  double value_;
  mutable int _cached_size_;
  friend struct protobuf_flutter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FlutterData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FlutterData) */ {
 public:
  FlutterData();
  virtual ~FlutterData();

  FlutterData(const FlutterData& from);

  inline FlutterData& operator=(const FlutterData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlutterData& default_instance();

  static inline const FlutterData* internal_default_instance() {
    return reinterpret_cast<const FlutterData*>(
               &_FlutterData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FlutterData* other);

  // implements Message ----------------------------------------------

  inline FlutterData* New() const PROTOBUF_FINAL { return New(NULL); }

  FlutterData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FlutterData& from);
  void MergeFrom(const FlutterData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FlutterData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FlutterDataPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::FlutterDataPoint& points(int index) const;
  ::FlutterDataPoint* mutable_points(int index);
  ::FlutterDataPoint* add_points();
  ::google::protobuf::RepeatedPtrField< ::FlutterDataPoint >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::FlutterDataPoint >&
      points() const;

  // @@protoc_insertion_point(class_scope:FlutterData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::FlutterDataPoint > points_;
  mutable int _cached_size_;
  friend struct protobuf_flutter_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FlutterDataPoint

// string entity = 1;
inline void FlutterDataPoint::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlutterDataPoint::entity() const {
  // @@protoc_insertion_point(field_get:FlutterDataPoint.entity)
  return entity_.GetNoArena();
}
inline void FlutterDataPoint::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FlutterDataPoint.entity)
}
#if LANG_CXX11
inline void FlutterDataPoint::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FlutterDataPoint.entity)
}
#endif
inline void FlutterDataPoint::set_entity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FlutterDataPoint.entity)
}
inline void FlutterDataPoint::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FlutterDataPoint.entity)
}
inline ::std::string* FlutterDataPoint::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:FlutterDataPoint.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlutterDataPoint::release_entity() {
  // @@protoc_insertion_point(field_release:FlutterDataPoint.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlutterDataPoint::set_allocated_entity(::std::string* entity) {
  if (entity != NULL) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:FlutterDataPoint.entity)
}

// string metric = 2;
inline void FlutterDataPoint::clear_metric() {
  metric_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FlutterDataPoint::metric() const {
  // @@protoc_insertion_point(field_get:FlutterDataPoint.metric)
  return metric_.GetNoArena();
}
inline void FlutterDataPoint::set_metric(const ::std::string& value) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FlutterDataPoint.metric)
}
#if LANG_CXX11
inline void FlutterDataPoint::set_metric(::std::string&& value) {
  
  metric_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FlutterDataPoint.metric)
}
#endif
inline void FlutterDataPoint::set_metric(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FlutterDataPoint.metric)
}
inline void FlutterDataPoint::set_metric(const char* value, size_t size) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FlutterDataPoint.metric)
}
inline ::std::string* FlutterDataPoint::mutable_metric() {
  
  // @@protoc_insertion_point(field_mutable:FlutterDataPoint.metric)
  return metric_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FlutterDataPoint::release_metric() {
  // @@protoc_insertion_point(field_release:FlutterDataPoint.metric)
  
  return metric_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FlutterDataPoint::set_allocated_metric(::std::string* metric) {
  if (metric != NULL) {
    
  } else {
    
  }
  metric_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric);
  // @@protoc_insertion_point(field_set_allocated:FlutterDataPoint.metric)
}

// double value = 3;
inline void FlutterDataPoint::clear_value() {
  value_ = 0;
}
inline double FlutterDataPoint::value() const {
  // @@protoc_insertion_point(field_get:FlutterDataPoint.value)
  return value_;
}
inline void FlutterDataPoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:FlutterDataPoint.value)
}

// -------------------------------------------------------------------

// FlutterData

// repeated .FlutterDataPoint points = 1;
inline int FlutterData::points_size() const {
  return points_.size();
}
inline void FlutterData::clear_points() {
  points_.Clear();
}
inline const ::FlutterDataPoint& FlutterData::points(int index) const {
  // @@protoc_insertion_point(field_get:FlutterData.points)
  return points_.Get(index);
}
inline ::FlutterDataPoint* FlutterData::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:FlutterData.points)
  return points_.Mutable(index);
}
inline ::FlutterDataPoint* FlutterData::add_points() {
  // @@protoc_insertion_point(field_add:FlutterData.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FlutterDataPoint >*
FlutterData::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:FlutterData.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FlutterDataPoint >&
FlutterData::points() const {
  // @@protoc_insertion_point(field_list:FlutterData.points)
  return points_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flutter_2eproto__INCLUDED
