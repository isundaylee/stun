// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flutter.proto

#ifndef PROTOBUF_flutter_2eproto__INCLUDED
#define PROTOBUF_flutter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace flutter {
namespace protobuf {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class DataPoint;
class DataPointDefaultTypeInternal;
extern DataPointDefaultTypeInternal _DataPoint_default_instance_;
}  // namespace protobuf
}  // namespace flutter

namespace flutter {
namespace protobuf {

namespace protobuf_flutter_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_flutter_2eproto

// ===================================================================

class DataPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flutter.protobuf.DataPoint) */ {
 public:
  DataPoint();
  virtual ~DataPoint();

  DataPoint(const DataPoint& from);

  inline DataPoint& operator=(const DataPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPoint& default_instance();

  static inline const DataPoint* internal_default_instance() {
    return reinterpret_cast<const DataPoint*>(
               &_DataPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DataPoint* other);

  // implements Message ----------------------------------------------

  inline DataPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  DataPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataPoint& from);
  void MergeFrom(const DataPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string entity = 1;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::std::string& entity() const;
  void set_entity(const ::std::string& value);
  #if LANG_CXX11
  void set_entity(::std::string&& value);
  #endif
  void set_entity(const char* value);
  void set_entity(const char* value, size_t size);
  ::std::string* mutable_entity();
  ::std::string* release_entity();
  void set_allocated_entity(::std::string* entity);

  // string metric = 2;
  void clear_metric();
  static const int kMetricFieldNumber = 2;
  const ::std::string& metric() const;
  void set_metric(const ::std::string& value);
  #if LANG_CXX11
  void set_metric(::std::string&& value);
  #endif
  void set_metric(const char* value);
  void set_metric(const char* value, size_t size);
  ::std::string* mutable_metric();
  ::std::string* release_metric();
  void set_allocated_metric(::std::string* metric);

  // double value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:flutter.protobuf.DataPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entity_;
  ::google::protobuf::internal::ArenaStringPtr metric_;
  double value_;
  mutable int _cached_size_;
  friend struct protobuf_flutter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flutter.protobuf.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Data* other);

  // implements Message ----------------------------------------------

  inline Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .flutter.protobuf.DataPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::flutter::protobuf::DataPoint& points(int index) const;
  ::flutter::protobuf::DataPoint* mutable_points(int index);
  ::flutter::protobuf::DataPoint* add_points();
  ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >&
      points() const;

  // @@protoc_insertion_point(class_scope:flutter.protobuf.Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint > points_;
  mutable int _cached_size_;
  friend struct protobuf_flutter_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DataPoint

// string entity = 1;
inline void DataPoint::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPoint::entity() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.entity)
  return entity_.GetNoArena();
}
inline void DataPoint::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.entity)
}
#if LANG_CXX11
inline void DataPoint::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flutter.protobuf.DataPoint.entity)
}
#endif
inline void DataPoint::set_entity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flutter.protobuf.DataPoint.entity)
}
inline void DataPoint::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flutter.protobuf.DataPoint.entity)
}
inline ::std::string* DataPoint::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.DataPoint.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPoint::release_entity() {
  // @@protoc_insertion_point(field_release:flutter.protobuf.DataPoint.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPoint::set_allocated_entity(::std::string* entity) {
  if (entity != NULL) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:flutter.protobuf.DataPoint.entity)
}

// string metric = 2;
inline void DataPoint::clear_metric() {
  metric_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataPoint::metric() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.metric)
  return metric_.GetNoArena();
}
inline void DataPoint::set_metric(const ::std::string& value) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.metric)
}
#if LANG_CXX11
inline void DataPoint::set_metric(::std::string&& value) {
  
  metric_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flutter.protobuf.DataPoint.metric)
}
#endif
inline void DataPoint::set_metric(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flutter.protobuf.DataPoint.metric)
}
inline void DataPoint::set_metric(const char* value, size_t size) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flutter.protobuf.DataPoint.metric)
}
inline ::std::string* DataPoint::mutable_metric() {
  
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.DataPoint.metric)
  return metric_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataPoint::release_metric() {
  // @@protoc_insertion_point(field_release:flutter.protobuf.DataPoint.metric)
  
  return metric_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataPoint::set_allocated_metric(::std::string* metric) {
  if (metric != NULL) {
    
  } else {
    
  }
  metric_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric);
  // @@protoc_insertion_point(field_set_allocated:flutter.protobuf.DataPoint.metric)
}

// double value = 3;
inline void DataPoint::clear_value() {
  value_ = 0;
}
inline double DataPoint::value() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.value)
  return value_;
}
inline void DataPoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.value)
}

// -------------------------------------------------------------------

// Data

// repeated .flutter.protobuf.DataPoint points = 1;
inline int Data::points_size() const {
  return points_.size();
}
inline void Data::clear_points() {
  points_.Clear();
}
inline const ::flutter::protobuf::DataPoint& Data::points(int index) const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.Data.points)
  return points_.Get(index);
}
inline ::flutter::protobuf::DataPoint* Data::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.Data.points)
  return points_.Mutable(index);
}
inline ::flutter::protobuf::DataPoint* Data::add_points() {
  // @@protoc_insertion_point(field_add:flutter.protobuf.Data.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >*
Data::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:flutter.protobuf.Data.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >&
Data::points() const {
  // @@protoc_insertion_point(field_list:flutter.protobuf.Data.points)
  return points_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace flutter

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flutter_2eproto__INCLUDED
