// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flutter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "flutter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace flutter {
namespace protobuf {
class DataPointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataPoint> {
} _DataPoint_default_instance_;
class DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Data> {
} _Data_default_instance_;

namespace protobuf_flutter_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPoint, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPoint, metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPoint, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, points_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DataPoint)},
  { 8, -1, sizeof(Data)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Data_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flutter.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _DataPoint_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Data_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DataPoint_default_instance_.DefaultConstruct();
  _Data_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rflutter.proto\022\020flutter.protobuf\":\n\tDat"
      "aPoint\022\016\n\006entity\030\001 \001(\t\022\016\n\006metric\030\002 \001(\t\022\r"
      "\n\005value\030\003 \001(\001\"3\n\004Data\022+\n\006points\030\001 \003(\0132\033."
      "flutter.protobuf.DataPointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 154);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flutter.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_flutter_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataPoint::kEntityFieldNumber;
const int DataPoint::kMetricFieldNumber;
const int DataPoint::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataPoint::DataPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_flutter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flutter.protobuf.DataPoint)
}
DataPoint::DataPoint(const DataPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity().size() > 0) {
    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  metric_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric().size() > 0) {
    metric_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:flutter.protobuf.DataPoint)
}

void DataPoint::SharedCtor() {
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _cached_size_ = 0;
}

DataPoint::~DataPoint() {
  // @@protoc_insertion_point(destructor:flutter.protobuf.DataPoint)
  SharedDtor();
}

void DataPoint::SharedDtor() {
  entity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataPoint::descriptor() {
  protobuf_flutter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flutter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataPoint& DataPoint::default_instance() {
  protobuf_flutter_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataPoint* DataPoint::New(::google::protobuf::Arena* arena) const {
  DataPoint* n = new DataPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:flutter.protobuf.DataPoint)
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

bool DataPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flutter.protobuf.DataPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity().data(), this->entity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flutter.protobuf.DataPoint.entity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metric = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric().data(), this->metric().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flutter.protobuf.DataPoint.metric"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flutter.protobuf.DataPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flutter.protobuf.DataPoint)
  return false;
#undef DO_
}

void DataPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flutter.protobuf.DataPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity = 1;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), this->entity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flutter.protobuf.DataPoint.entity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->entity(), output);
  }

  // string metric = 2;
  if (this->metric().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric().data(), this->metric().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flutter.protobuf.DataPoint.metric");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->metric(), output);
  }

  // double value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:flutter.protobuf.DataPoint)
}

::google::protobuf::uint8* DataPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flutter.protobuf.DataPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity = 1;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), this->entity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flutter.protobuf.DataPoint.entity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entity(), target);
  }

  // string metric = 2;
  if (this->metric().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric().data(), this->metric().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flutter.protobuf.DataPoint.metric");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->metric(), target);
  }

  // double value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:flutter.protobuf.DataPoint)
  return target;
}

size_t DataPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flutter.protobuf.DataPoint)
  size_t total_size = 0;

  // string entity = 1;
  if (this->entity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity());
  }

  // string metric = 2;
  if (this->metric().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric());
  }

  // double value = 3;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flutter.protobuf.DataPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flutter.protobuf.DataPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flutter.protobuf.DataPoint)
    MergeFrom(*source);
  }
}

void DataPoint::MergeFrom(const DataPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flutter.protobuf.DataPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity().size() > 0) {

    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  if (from.metric().size() > 0) {

    metric_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DataPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flutter.protobuf.DataPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoint::CopyFrom(const DataPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flutter.protobuf.DataPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoint::IsInitialized() const {
  return true;
}

void DataPoint::Swap(DataPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataPoint::InternalSwap(DataPoint* other) {
  entity_.Swap(&other->entity_);
  metric_.Swap(&other->metric_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataPoint::GetMetadata() const {
  protobuf_flutter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flutter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataPoint

// string entity = 1;
void DataPoint::clear_entity() {
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataPoint::entity() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.entity)
  return entity_.GetNoArena();
}
void DataPoint::set_entity(const ::std::string& value) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.entity)
}
#if LANG_CXX11
void DataPoint::set_entity(::std::string&& value) {
  
  entity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flutter.protobuf.DataPoint.entity)
}
#endif
void DataPoint::set_entity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flutter.protobuf.DataPoint.entity)
}
void DataPoint::set_entity(const char* value, size_t size) {
  
  entity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flutter.protobuf.DataPoint.entity)
}
::std::string* DataPoint::mutable_entity() {
  
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.DataPoint.entity)
  return entity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataPoint::release_entity() {
  // @@protoc_insertion_point(field_release:flutter.protobuf.DataPoint.entity)
  
  return entity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataPoint::set_allocated_entity(::std::string* entity) {
  if (entity != NULL) {
    
  } else {
    
  }
  entity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity);
  // @@protoc_insertion_point(field_set_allocated:flutter.protobuf.DataPoint.entity)
}

// string metric = 2;
void DataPoint::clear_metric() {
  metric_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataPoint::metric() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.metric)
  return metric_.GetNoArena();
}
void DataPoint::set_metric(const ::std::string& value) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.metric)
}
#if LANG_CXX11
void DataPoint::set_metric(::std::string&& value) {
  
  metric_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flutter.protobuf.DataPoint.metric)
}
#endif
void DataPoint::set_metric(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flutter.protobuf.DataPoint.metric)
}
void DataPoint::set_metric(const char* value, size_t size) {
  
  metric_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flutter.protobuf.DataPoint.metric)
}
::std::string* DataPoint::mutable_metric() {
  
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.DataPoint.metric)
  return metric_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataPoint::release_metric() {
  // @@protoc_insertion_point(field_release:flutter.protobuf.DataPoint.metric)
  
  return metric_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataPoint::set_allocated_metric(::std::string* metric) {
  if (metric != NULL) {
    
  } else {
    
  }
  metric_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric);
  // @@protoc_insertion_point(field_set_allocated:flutter.protobuf.DataPoint.metric)
}

// double value = 3;
void DataPoint::clear_value() {
  value_ = 0;
}
double DataPoint::value() const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.DataPoint.value)
  return value_;
}
void DataPoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:flutter.protobuf.DataPoint.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_flutter_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flutter.protobuf.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flutter.protobuf.Data)
}

void Data::SharedCtor() {
  _cached_size_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:flutter.protobuf.Data)
  SharedDtor();
}

void Data::SharedDtor() {
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_flutter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flutter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  protobuf_flutter_2eproto::InitDefaults();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:flutter.protobuf.Data)
  points_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flutter.protobuf.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flutter.protobuf.DataPoint points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flutter.protobuf.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flutter.protobuf.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flutter.protobuf.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flutter.protobuf.DataPoint points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  // @@protoc_insertion_point(serialize_end:flutter.protobuf.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flutter.protobuf.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flutter.protobuf.DataPoint points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->points(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:flutter.protobuf.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flutter.protobuf.Data)
  size_t total_size = 0;

  // repeated .flutter.protobuf.DataPoint points = 1;
  {
    unsigned int count = this->points_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flutter.protobuf.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flutter.protobuf.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flutter.protobuf.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flutter.protobuf.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flutter.protobuf.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flutter.protobuf.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  points_.InternalSwap(&other->points_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_flutter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flutter_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// repeated .flutter.protobuf.DataPoint points = 1;
int Data::points_size() const {
  return points_.size();
}
void Data::clear_points() {
  points_.Clear();
}
const ::flutter::protobuf::DataPoint& Data::points(int index) const {
  // @@protoc_insertion_point(field_get:flutter.protobuf.Data.points)
  return points_.Get(index);
}
::flutter::protobuf::DataPoint* Data::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:flutter.protobuf.Data.points)
  return points_.Mutable(index);
}
::flutter::protobuf::DataPoint* Data::add_points() {
  // @@protoc_insertion_point(field_add:flutter.protobuf.Data.points)
  return points_.Add();
}
::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >*
Data::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:flutter.protobuf.Data.points)
  return &points_;
}
const ::google::protobuf::RepeatedPtrField< ::flutter::protobuf::DataPoint >&
Data::points() const {
  // @@protoc_insertion_point(field_list:flutter.protobuf.Data.points)
  return points_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace flutter

// @@protoc_insertion_point(global_scope)
